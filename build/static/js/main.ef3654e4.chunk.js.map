{"version":3,"sources":["components/Filter.js","components/ContactForm.js","components/Contact.js","components/Contacts.js","services/contacts.js","components/Notification.js","components/Error.js","App.js","index.js"],"names":["Filter","_ref","filter","filterChangeHandler","react_default","a","createElement","value","onChange","ContactForm","props","onSubmit","addContact","newName","nameChangeHandler","newNumber","numberChangeHandler","type","Contact","name","number","handleRemove","onClick","Contacts","contacts","removeContact","map","contact","components_Contact","key","id","baseUrl","services_contacts","request","axios","get","nonExisting","then","response","data","concat","newObject","post","put","delete","Notification","message","className","Error","App","_useState","useState","_useState2","Object","slicedToArray","setContacts","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setFilter","_useState9","_useState10","notificationMessage","setNotificationMessage","_useState11","_useState12","errorMessage","setErrorMessage","useEffect","contactService","initialContacts","contactsToShow","toLowerCase","indexOf","updateContact","existingContact","window","confirm","objectSpread","returnedContact","setTimeout","catch","error","components_Error","components_Notification","components_Filter","event","target","components_ContactForm","preventDefault","find","newContact","components_Contacts","c","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ef3654e4.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ filter, filterChangeHandler }) => {\n  return (\n    <div>\n      rajaa näytettäviä <input value={filter} onChange={filterChangeHandler} />\n    </div>\n  )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst ContactForm = (props) => {\n  return (\n    <div>\n      <form onSubmit={props.addContact}>\n        <div>\n          nimi:{' '}\n          <input value={props.newName} onChange={props.nameChangeHandler} />\n        </div>\n        <div>\n          numero:{' '}\n          <input value={props.newNumber} onChange={props.numberChangeHandler} />\n        </div>\n        <div>\n          <button type=\"submit\">lisää</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default ContactForm\n","import React from 'react'\n\nconst Contact = ({ name, number, handleRemove }) => {\n  return (\n    <div>\n      {name} {number} <button onClick={handleRemove}>poista</button>\n    </div>\n  )\n}\n\nexport default Contact\n","import React from 'react'\nimport Contact from './Contact'\n\nconst Contacts = ({ contacts, removeContact }) => {\n  return (\n    <div>\n      {contacts.map((contact) => (\n        <Contact\n          key={contact.id}\n          name={contact.name}\n          number={contact.number}\n          handleRemove={() => removeContact(contact)}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default Contacts\n","import axios from 'axios'\n\nconst baseUrl = '/api/contacts'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  const nonExisting = {\n    id: 1000,\n    name: 'Oskari Olematon',\n    number: '000-000000'\n  }\n  return request.then((response) => response.data.concat(nonExisting))\n}\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then((response) => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then((response) => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(() => id)\n}\n\nexport default { getAll, create, update, remove }\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return <div className=\"notification\">{message}</div>\n}\n\nexport default Notification\n","import React from 'react'\n\nconst Error = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return <div className=\"error\">{message}</div>\n}\n\nexport default Error\n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport ContactForm from './components/ContactForm'\nimport Contacts from './components/Contacts'\nimport contactService from './services/contacts'\nimport Notification from './components/Notification'\nimport Error from './components/Error'\n\nconst App = () => {\n  const [contacts, setContacts] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    contactService.getAll().then((initialContacts) => {\n      setContacts(initialContacts)\n    })\n  }, [])\n\n  const contactsToShow = contacts.filter(\n    (contact) => contact.name.toLowerCase().indexOf(filter.toLowerCase()) !== -1\n  )\n\n  const handleNameChange = (event) => {\n    // console.log('newName', event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    // console.log('newNumber', event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    // console.log('filter', event.target.value)\n    setFilter(event.target.value)\n  }\n\n  const addContact = (event) => {\n    event.preventDefault()\n    // console.log('Adding: ', newName, newNumber)\n    const existingContact = contacts.find(\n      (contact) => contact.name.toLowerCase() === newName.toLowerCase()\n    )\n    if (existingContact) {\n      updateContact(existingContact)\n    } else {\n      contactService\n        .create({ name: newName, number: newNumber })\n        .then((newContact) => {\n          setContacts(contacts.concat(newContact))\n        })\n      setNotificationMessage(`Lisättiin ${newName}`)\n      setTimeout(() => setNotificationMessage(null), 5000)\n\n      setNewName('')\n      setNewNumber('')\n    }\n  }\n\n  const updateContact = (existingContact) => {\n    if (\n      window.confirm(\n        `${\n          existingContact.name\n        } on jo luettelossa, korvataanko vanha numero uudella?`\n      )\n    ) {\n      contactService\n        .update(existingContact.id, { ...existingContact, number: newNumber })\n        .then((returnedContact) => {\n          setContacts(\n            contacts.map((contact) =>\n              contact.id !== existingContact.id ? contact : returnedContact\n            )\n          )\n          setNotificationMessage(`Päivitettiin ${existingContact.name}`)\n          setTimeout(() => setNotificationMessage(null), 5000)\n        })\n        .catch((error) => {\n          setErrorMessage(\n            `${\n              existingContact.name\n            } on valitettavasti jo poistettu palvelimelta`\n          )\n          setTimeout(() => setErrorMessage(null), 5000)\n          setContacts(\n            contacts.filter((contact) => contact.id !== existingContact.id)\n          )\n        })\n      setNewName('')\n      setNewNumber('')\n    }\n  }\n\n  const removeContact = (contact) => {\n    if (window.confirm(`Poistetaanko ${contact.name}?`)) {\n      contactService\n        .remove(contact.id)\n        .then((id) => {\n          setContacts(contacts.filter((contact) => contact.id !== id))\n          setNotificationMessage(`Poistettiin ${contact.name}`)\n          setTimeout(() => setNotificationMessage(null), 5000)\n        })\n        .catch((error) => {\n          setContacts(contacts.filter((c) => c.id !== contact.id))\n          setErrorMessage(`${contact.name} on jo poistettu palvelimelta`)\n          setTimeout(() => setErrorMessage(null), 5000)\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Puhelinluettelo</h2>\n\n      <Error message={errorMessage} />\n\n      <Notification message={notificationMessage} />\n\n      <Filter filter={filter} filterChangeHandler={handleFilterChange} />\n\n      <h3>lisää uusi</h3>\n\n      <ContactForm\n        newName={newName}\n        nameChangeHandler={handleNameChange}\n        newNumber={newNumber}\n        numberChangeHandler={handleNumberChange}\n        addContact={addContact}\n      />\n\n      <h3>Numerot</h3>\n\n      <Contacts contacts={contactsToShow} removeContact={removeContact} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}